{"version":3,"sources":["components/assessment/Assessment.js","components/home/Home.js","components/risk-graph/RiskGraph.js","components/list/List.js","App.js","serviceWorker.js","index.js"],"names":["Component","Home","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","classes","react_default","a","createElement","className","root","Grid_default","container","justify","spacing","item","xs","Paper_default","paper","withStyles","theme","flexGrow","marginTop","padding","unit","textAlign","color","palette","text","secondary","height","minWidth","RiskGraph","_this","drawChart","bind","assertThisInitialized","console","log","margin","width","treemap","d3","size","nodes","name","children","g","append","attr","node","selectAll","data","descendants","slice","enter","d","x","y","parent","style","id","List","calories","fat","carbs","protein","labels","rows","Table_default","table","TableHead_default","TableRow_default","map","label","index","TableCell_default","align","TableBody_default","row","key","component","scope","TextField_default","inputProps","defaultValue","overflowX","createMuiTheme","primary","blue","blueGrey","doubleUnit","App","handleChange","event","value","setState","state","styles","index_es","position","onChange","home_Home","list_List","risk_graph_RiskGraph","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0aafa8de.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as Survey from \"survey-react\";\nimport \"survey-react/survey.css\";\n\nclass Assessment extends Component {\n  //Define Survey JSON\n //Here is the simplest Survey with one text question\n  json = {\n    pages: [\n        {\n            elements: [\n                {\n                    type: \"radiogroup\",\n                    name: \"eatsBreakfast\",\n                    title: \"Do you eat breakfast?\",\n                    isRequired: true,\n                    choices: [\n                        'Yes',\n                        'No'\n                    ]\n                },\n                {\n                    type: \"checkbox\",\n                    name: \"mainDish\",\n                    title: \"Which of these would you choose?\",\n                    isRequired: true,\n                    /*colCount: 2,*/\n                    visibleIf: \"{eatsBreakfast}='Yes'\",\n                    choices: [\n                        {value: 1, text: \"Waffle\"},\n                        {value: 2, text: \"Pancake\"},\n                        {value: 3, text: \"Omelet\"},\n                        {value: 4, text: \"CrÃªpe\"},\n                        {value: 5, text: \"Oatmeal\"},\n                        {value: 6, text: \"Grits\"},\n                        {value: 7, text: \"Toast\"},\n                        {value: 8, text: \"Bagel\"}\n                    ]\n                },\n                {\n                    type: \"radiogroup\",\n                    name: \"primaryTopping\",\n                    title: \"Which of these toppings would you choose first?\",\n                    isRequired: false,\n                    /*colCount: 2,*/\n                    visibleIf: \"{mainDish}<3 or {mainDish}=[1,2]\",\n                    choices: [\n                        \"Chocolate\",\n                        \"Strawberry\",\n                        \"Pistachio\",\n                        \"Blueberry\",\n                        \"Peanut butter\",\n                        \"Maple Syrup\",\n                        \"Whipped Cream\"\n                    ]\n                }\n            ]\n        },\n        {\n            elements: [\n                {\n                    type: \"radiogroup\",\n                    name: \"hasDrink\",\n                    title: \"Do you have a beverage in the morning?\",\n                    isRequired: true,\n                    choices: [\n                        'Yes',\n                        'No'\n                    ]\n                },\n                {\n                    type: \"radiogroup\",\n                    name: \"hasCaffeine\",\n                    title: \"Which drink would you choose first?\",\n                    isRequired: false,\n                    /*colCount: 2,*/\n                    visibleIf: \"{hasDrink}='Yes'\",\n                    choices: [\n                        {value: 1, text: \"Coffee\"},\n                        {value: 2, text: \"Espresso\"},\n                        {value: 3, text: \"Latte\"},\n                        {value: 4, text: \"Hot Tea\"},\n                        {value: 5, text: \"Water\"},\n                        {value: 6, text: \"Fruit Juice\"}\n                    ]\n                },\n                {\n                    type: \"radiogroup\",\n                    name: \"addsCream\",\n                    title: \"Do you add milk or cream?\",\n                    isRequired: false,\n                    /*colCount: 2,*/\n                    visibleIf: \"{hasCaffeine}<5\",\n                    choices: [\n                        \"Yes\",\n                        \"No\"\n                    ]\n                }\n            ]\n        }\n    ]\n  };\n\n  //Define a callback methods on survey complete\n  onComplete(survey, options) {\n    //Write survey results into database\n    console.log(\"Survey results: \" + JSON.stringify(survey.data));\n  }\n\n  render() {\n    //Create the model and pass it into react Survey component\n    //You may create survey model outside the render function and use it in your App or component\n    //The most model properties are reactive, on their change the component will change UI when needed.\n    var model = new Survey.Model(this.json);\n    return (<Survey.Survey model={model} onComplete={this.onComplete}/>);\n    /*\n    //The alternative way. react Survey component will create survey model internally\n    return (<Survey.Survey json={this.json} onComplete={this.onComplete}/>);\n    */\n    //You may pass model properties directly into component or set it into model\n    // <Survey.Survey model={model} mode=\"display\"/>\n    //or \n    // model.mode=\"display\"\n    // <Survey.Survey model={model}/>\n    // You may change model properties outside render function. \n    //If needed react Survey Component will change its behavior and change UI.\n  }\n}\n\nexport default Assessment;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Typography, Button } from \"@material-ui/core\";\n\nconst styles = theme => ({\n    root: {\n      flexGrow: 1,\n      marginTop: 12\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: 200,\n      minWidth: 200\n    },\n  });\n\nclass Home extends Component {\n    constructor(props){\n        super(props);\n    } \n\n    render() {\n        const { classes } = this.props;\n        const bull = <span className=\"bullet\">â¢</span>;\n\n        return (\n            <div className={classes.root}>\n                <Grid container justify=\"center\" spacing={24}>\n                    <Grid item xs={5}>\n                        <Paper className={classes.paper}>Overview</Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        {/*<Card className=\"card\">\n                            <CardContent>\n                                <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\n                                    Word of the Day\n                                </Typography>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    be\n                                    {bull}\n                                    nev\n                                    {bull}o{bull}\n                                    lent\n                                </Typography>\n                                <Typography className=\"blarg\" color=\"textSecondary\">\n                                    adjective\n                                    </Typography>\n                                    <Typography component=\"p\">\n                                    well meaning and kindly.\n                                    <br />\n                                    {'\"a benevolent smile\"'}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\">Learn More</Button>\n                            </CardActions>\n                        </Card>*/}\n                        <Paper className={classes.paper}>Projects</Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Paper className={classes.paper}>Products</Paper>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Paper className={classes.paper}>Suppliers</Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n  }\n}\n\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass RiskGraph extends Component {\n    constructor(props){\n        super(props);\n        this.drawChart = this.drawChart.bind(this);\n    }\n\n    componentDidMount(){\n        console.log(\"did mount\");\n        this.drawChart();\n    }\n\n    componentWillUnmount(){\n        console.log(\"will unmount\");\n\n        \n    }\n\n    drawChart(){\n        console.log(\"draw chart\");\n        //const w = 300, h = 300;\n        /*const data = [12, 5, 6, 6, 9, 10];\n        const svg = d3.select(\"#risk-graph\")\n                     .append(\"svg\")\n                     .attr(\"width\", w)\n                     .attr(\"height\", h)\n                     .style(\"margin-left\", 100);\n        \n        svg.selectAll(\"rect\")\n           .data(data)\n           .enter()\n           .append(\"rect\")\n           .attr(\"x\", (d, i) => i * 70)\n           .attr(\"y\", (d, i) => h - 10 * d)\n           .attr(\"width\", 65)\n           .attr(\"height\", (d, i) => d * 10)\n           .attr(\"fill\", \"green\");*/\n\n        var treeData =\n        {\n            \"name\": \"Top Level\",\n            \"children\": [\n            { \n                \"name\": \"Level 2: A\",\n                \"children\": [\n                { \"name\": \"Son of A\" },\n                { \"name\": \"Daughter of A\" }\n                ]\n            },\n            { \"name\": \"Level 2: B\" }\n            ]\n        };\n\n        // set the dimensions and margins of the diagram\n        var margin = {top: 40, right: 90, bottom: 50, left: 90},\n            width = 660 - margin.left - margin.right,\n            height = 500 - margin.top - margin.bottom;\n\n        // declares a tree layout and assigns the size\n        var treemap = d3.tree()\n            .size([width, height]);\n\n        //  assigns the data to a hierarchy using parent-child relationships\n        var nodes = d3.hierarchy(treeData);\n\n        // maps the node data to the tree layout\n        nodes = treemap(nodes);\n\n        // append the svg obgect to the body of the page\n        // appends a 'group' element to 'svg'\n        // moves the 'group' element to the top left margin\n        var svg = d3.select(\"#risk-graph\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom),\n            g = svg.append(\"g\")\n            .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // adds the links between the nodes\n        var link = g.selectAll(\".link\")\n            .data( nodes.descendants().slice(1))\n            .enter().append(\"path\")\n            .attr(\"class\", \"link\")\n            .attr(\"d\", function(d) {\n            return \"M\" + d.x + \",\" + d.y\n                + \"C\" + d.x + \",\" + (d.y + d.parent.y) / 2\n                + \" \" + d.parent.x + \",\" +  (d.y + d.parent.y) / 2\n                + \" \" + d.parent.x + \",\" + d.parent.y;\n            });\n\n        // adds each node as a group\n        var node = g.selectAll(\".node\")\n            .data(nodes.descendants())\n        .enter().append(\"g\")\n            .attr(\"class\", function(d) { \n            return \"node\" + \n                (d.children ? \" node--internal\" : \" node--leaf\"); })\n            .attr(\"transform\", function(d) { \n            return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n        // adds the circle to the node\n        node.append(\"circle\")\n        .attr(\"r\", 10);\n\n        // adds the text to the node\n        node.append(\"text\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"y\", function(d) { return d.children ? -20 : 20; })\n        .style(\"text-anchor\", \"middle\")\n        .text(function(d) { return d.data.name; });\n    }\n\n    render() {\n        return <div id={\"risk-graph\"}></div>;\n    }\n}\n\nexport default RiskGraph;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nconst listStyles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\nclass List extends Component {\n    constructor(props){\n        super(props);\n    } \n      \n    createData(id, name, calories, fat, carbs, protein) {\n        id += 1;\n        console.log(\"id: \", id);\n        return { id, name, calories, fat, carbs, protein };\n    }\n\n    render() {\n        let id = 0;\n        const data = {\n            \"labels\": [\"Dessert\", \"Calories\", \"Fat (g)\", \"Carbs (g)\", \"Protein (g)\"],\n            \"rows\": [\n                ['Frozen yoghurt', 159, 6.0, 24, 4.0],\n                ['Ice cream sandwich', 237, 9.0, 37, 4.3],\n                ['Eclair', 262, 16.0, 24, 6.0],\n                ['Cupcake', 305, 3.7, 67, 4.3],\n                ['Gingerbread', 356, 16.0, 49, 3.9]\n            ]\n        };\n\n        return (\n            <Table className={this.props.table}>\n                <TableHead>\n                    <TableRow>\n                        {data.labels.map((label, index) => (\n                           <TableCell\n                             align={(() => {\n                                if (index > 0) return \"right\";\n                                else return \"left\";\n                             })()}\n                             >{label}</TableCell> \n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.rows.map((row, index) => (\n                        <TableRow key={index}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row[0]}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <TextField\n                                    inputProps={{style: {textAlign: \"right\"}}}\n                                    defaultValue={row[1]}\n                                >\n                                </TextField>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <TextField\n                                    inputProps={{style: {textAlign: \"right\"}}}\n                                    defaultValue={row[2]}\n                                >\n                                </TextField>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <TextField\n                                    inputProps={{style: {textAlign: \"right\"}}}\n                                    defaultValue={row[3]}\n                                >\n                                </TextField>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <TextField\n                                    inputProps={{style: {textAlign: \"right\"}}}\n                                    defaultValue={row[4]}\n                                >\n                                </TextField>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        );\n    }\n}\n\nexport default withStyles(listStyles)(List);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Assessment, Home, List, RiskGraph } from \"./components/\";\n\nimport { AppBar, Tab, Tabs, Toolbar, Typography } from \"@material-ui/core\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, blueGrey } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: blueGrey\n  },\n  spacing: {\n    doubleUnit: 16\n  }\n});\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      value: 'dashboard'\n    };\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={this.handleChange}>\n            <Tab value=\"dashboard\" label=\"Dashboard\" />\n            <Tab value=\"projects\" label=\"Projects\" />\n            <Tab value=\"products\" label=\"Products\" />\n            <Tab value=\"suppliers\" label=\"Suppliers\" />\n            <Tab value=\"network\" label=\"Supply Network\" />\n          </Tabs>\n        </AppBar>\n        {value === 'dashboard' && <Home />}\n        {value === 'projects' && <List />}\n        {value === 'products' && <List />}\n        {value === 'suppliers' && <List />}\n        {value === 'network' && <RiskGraph />}\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    (\n        <App />\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}